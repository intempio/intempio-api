# Generated by Django 2.0.3 on 2018-04-29 10:17

import uuid

import django.contrib.postgres.fields.jsonb
import django.utils.timezone
import model_utils.fields
from django.conf import settings
from django.db import migrations, models

import intempio_api.events.models


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('events', '0004_auto_20180425_1318'),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalBiogenEvent',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False,
                                                                verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False,
                                                                      verbose_name='modified')),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=100)),
                ('requestor_name', models.CharField(max_length=100)),
                ('date', models.CharField(max_length=20)),
                ('time', models.CharField(max_length=20)),
                ('period', models.CharField(choices=[('am', 'am'), ('pm', 'pm')], default='am', max_length=5)),
                ('duration', models.PositiveSmallIntegerField()),
                ('participants_count', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('presenters_count', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('timezone', models.CharField(
                    choices=[('US/Central', 'US/Central'), ('US/Eastern', 'US/Eastern'), ('US/Mountain', 'US/Mountain'),
                             ('US/Pacific', 'US/Pacific')], default='US/Eastern', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('presenters', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('status', model_utils.fields.StatusField(
                    choices=[('new', 'new'), ('reviewed', 'reviewed'), ('accepted', 'accepted')], default='new',
                    max_length=100, no_check_for_status=True)),
                ('reviewed_at', model_utils.fields.MonitorField(blank=True, default=None, monitor='status', null=True,
                                                                when={'reviewed'})),
                ('accepted_at', model_utils.fields.MonitorField(blank=True, default=None, monitor='status', null=True,
                                                                when={'accepted'})),
                ('eod_webcast', models.CharField(choices=[('EOD', 'EOD'), ('Webcast', 'Webcast')], max_length=20)),
                ('ms_sma', models.CharField(choices=[('MS', 'MS'), ('MSA', 'MSA')], max_length=20)),
                ('slide_deck_name', models.CharField(blank=True, max_length=255)),
                ('slide_deck_id', models.CharField(blank=True, max_length=255)),
                ('program_meeting_id', models.CharField(blank=True, max_length=255)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type',
                 models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+',
                                   to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(blank=True, db_constraint=False, null=True,
                                              on_delete=django.db.models.deletion.DO_NOTHING, related_name='+',
                                              to='events.Project')),
            ],
            options={
                'verbose_name': 'historical Biogen Event',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(intempio_api.events.models.StatusMixin, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSunovionEvent',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False,
                                                                verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False,
                                                                      verbose_name='modified')),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=100)),
                ('requestor_name', models.CharField(max_length=100)),
                ('date', models.CharField(max_length=20)),
                ('time', models.CharField(max_length=20)),
                ('period', models.CharField(choices=[('am', 'am'), ('pm', 'pm')], default='am', max_length=5)),
                ('duration', models.PositiveSmallIntegerField()),
                ('participants_count', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('presenters_count', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('timezone', models.CharField(
                    choices=[('US/Central', 'US/Central'), ('US/Eastern', 'US/Eastern'), ('US/Mountain', 'US/Mountain'),
                             ('US/Pacific', 'US/Pacific')], default='US/Eastern', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('presenters', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('status', model_utils.fields.StatusField(
                    choices=[('new', 'new'), ('reviewed', 'reviewed'), ('accepted', 'accepted')], default='new',
                    max_length=100, no_check_for_status=True)),
                ('reviewed_at', model_utils.fields.MonitorField(blank=True, default=None, monitor='status', null=True,
                                                                when={'reviewed'})),
                ('accepted_at', model_utils.fields.MonitorField(blank=True, default=None, monitor='status', null=True,
                                                                when={'accepted'})),
                ('producer_required', models.BooleanField(default=False)),
                ('rehearsal_required', models.BooleanField(default=False)),
                ('recording_required', models.BooleanField(default=False)),
                ('technology_check', models.BooleanField(default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type',
                 models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+',
                                   to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(blank=True, db_constraint=False, null=True,
                                              on_delete=django.db.models.deletion.DO_NOTHING, related_name='+',
                                              to='events.Project')),
            ],
            options={
                'verbose_name': 'historical Sunovion Event',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(intempio_api.events.models.StatusMixin, models.Model),
        ),
    ]
